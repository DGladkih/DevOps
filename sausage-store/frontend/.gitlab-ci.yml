stages:
  - build
  - test
  - notify
  - release
  - deploy
  - rollback

build-frontend-code-job:
  stage: build
  rules:
    - changes:
        - frontend/**/*
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend

sonarqub-frontend-sast:
  stage: test
  rules:
    - changes:
        - frontend/**/*
  image: sonarsource/sonar-scanner-cli
  needs:
    - build-frontend-code-job
  script:
    - sonar-scanner -X -Dsonar.projectKey=$SONAR_PROJECT_KEY_FRONT -Dsonar.sources=. -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.exclusions=**/*.java

telegram-notification-frontend:
  stage: notify
  rules:
    - changes:
        - frontend/**/*
    - if: '$CI_COMMIT_MESSAGE =~ /send notification/'
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1002332977243\", \"text\": \"Гладких Данил собрал Frontend $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=$CI_JOB_NAME\"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
  needs:
    - build-frontend-code-job

upload-frontend-release:
  stage: release
  only:
    changes:
      - frontend/**/*
  needs:
    - build-frontend-code-job
  script:
    - cd frontend/dist
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz "${NEXUS_REPO_URL}/repository/${NEXUS_REPO_FRONTEND_NAME}/${VERSION}/sausage-store-${VERSION}.tar.gz"

deploy-frontend:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
  script:
    - ssh ${DEV_USER}@${DEV_HOST} << 'EOF'
        set -e
        echo "Deploying frontend..."
        cd /var/www/frontend
        git pull origin main
        npm install
        npm run build
        systemctl restart frontend.service
        echo "Frontend deployed successfully!"
      EOF
  environment:
    name: frontend/$CI_COMMIT_REF_SLUG
    on_stop: rollback-frontend
    
rollback-frontend:
  stage: rollback
  script:
    - echo "Rolling back frontend to previous version..."
    - ssh ${DEV_USER}@${DEV_HOST} << 'EOF'
        set -e
        cd /var/www/frontend
        git checkout HEAD^  # откат на предыдущий коммит
        npm install
        npm run build
        systemctl restart frontend.service
        echo "Frontend rolled back successfully!"
      EOF
  environment:
    name: frontend/$CI_COMMIT_REF_SLUG
    action: stop