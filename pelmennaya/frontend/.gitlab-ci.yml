stages:
  - build
  - release

variables:
  VERSION: "1.0.${CI_PIPELINE_ID}"
  IMAGE_NAME: "$CI_REGISTRY_IMAGE/frontend"

build-frontend:
  stage: build
  image: node:16
  script:
    - cd frontend
    - npm ci
    - npm run build
    - mv dist public_html
    - cp nginx.conf public_html/
  artifacts:
    paths:
      - frontend/public_html/
  tags:
    - kubernetes

kaniko-build-frontend:
  stage: release
  image: gcr.io/kaniko-project/executor:latest
  variables:
    DOCKER_CONFIG: /kaniko/.docker/
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - cp -r frontend/public_html frontend/  # предполагаем, что Dockerfile использует ./public_html
    - /kaniko/executor
        --context $CI_PROJECT_DIR/frontend
        --dockerfile $CI_PROJECT_DIR/frontend/Dockerfile
        --destination $IMAGE_NAME:$VERSION
        --destination $IMAGE_NAME:latest
  tags:
    - kubernetes
  needs: [build-frontend]
