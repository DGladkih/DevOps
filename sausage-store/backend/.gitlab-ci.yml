stages:
  - build
  - test
  - notify
  - release
  - deploy
  - rollback

build-backend-code-job:
  stage: build
  rules:
    - changes:
        - backend/**/*
  script:
    - cd backend
    - SPRING_FLYWAY_ENABLED=false mvn clean package
  artifacts:
    paths:
      - backend/target/sausage-store-0.0.1-SNAPSHOT.jar
  cache:
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository

semgrep-sast:
  stage: test
  rules:
    - changes:
        - backend/**/*
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 11
    MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
  needs:
    - build-backend-code-job

sonarqube-backend-sast:
  stage: test
  image: maven:3.8-openjdk-16
  rules:
    - changes:
        - backend/**/*
  script:
    - cd backend
    - mvn verify sonar:sonar -Dsonar.projectKey=$SONAR_PROJECT_KEY_BACK -Dsonar.host.url=$SONARQUBE_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.projectName="14_ДанилГладких_БЭКЭНД" -Dsonar.qualitygate.wait=true
  cache:
    paths:
      - ${CI_PROJECT_DIR}/.m2/repository
  needs:
    - build-backend-code-job

telegram-notification-backend:
  stage: notify
  rules:
    - changes:
        - backend/**/*
    - if: '$CI_COMMIT_MESSAGE =~ /send notification/'
  script:
    - 'curl -X POST -H "Content-type: application/json" --data "{\"chat_id\": \"-1002332977243\", \"text\": \"Гладких Данил собрал Backend $CI_PROJECT_URL/-/jobs/artifacts/$CI_COMMIT_SHA/download?job=$CI_JOB_NAME\"}" https://api.telegram.org/bot5933756043:AAE8JLL5KIzgrNBeTP5e-1bkbJy4YRoeGjs/sendMessage'
  needs:
    - build-backend-code-job

upload-backend-release:
  stage: release
  only:
    changes:
      - backend/**/*
  needs:
    - build-backend-code-job
  script:
    - ls -la backend
    - cd backend
    - mvn deploy -DskipTests -Dmaven.repo.local="${CI_PROJECT_DIR}/.m2/repository" -s settings.xml -Dversion.application="${VERSION}"

deploy-backend:
  stage: deploy
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
  script:
    - ssh ${DEV_USER}@${DEV_HOST} << 'EOF'
        set -e
        echo "Deploying backend..."
        cd /var/www/backend
        git pull origin main
        npm install --production
        systemctl restart backend.service
        echo "Backend deployed successfully!"
      EOF
  environment:
    name: backend/$CI_COMMIT_REF_SLUG
    on_stop: rollback-backend
    
rollback-backend:
  stage: rollback
  script:
    - echo "Rolling back backend to previous version..."
    - ssh ${DEV_USER}@${DEV_HOST} << 'EOF'
        set -e
        cd /var/www/backend
        git checkout HEAD^  # откат на предыдущий коммит
        npm install --production
        systemctl restart backend.service
        echo "Backend rolled back successfully!"
      EOF
  environment:
    name: backend/$CI_COMMIT_REF_SLUG
    action: stop